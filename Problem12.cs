using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace projecteuler
{
    public class Problem12
    {
        /// <summary>
        /// Description : The sequence of triangle numbers is generated by adding the natural numbers. 
        /// So the 7 th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28 . The first ten terms would be: 1 , 3 , 6 , 10 , 15 , 21 , 28 , 36 , 45 , 55 , â€¦ Let us list the factors of the first seven triangle numbers:
        /// What is the greatest product of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the  20x20 grid?
        /// We can see that 28 is the first triangle number to have over five divisors. What is the value of the first triangle number to have over limit divisors?
        /// </summary>
        /// <returns>Highly Divisible Triangular Number</returns>
        public static long Solution(int limit)
        {
            long triangleNumber = 0;
            int index = 1;
            while (true)
            {
                triangleNumber = GetTriangleNumber(index);

                int divisorCount = GetDivisorCount(triangleNumber);

                if (divisorCount > limit)
                {
                    break;
                }

                index++;
            }
            return triangleNumber;
        }
        private static long GetTriangleNumber(int n)
        {
            return (long)n * (n + 1) / 2;
        }

        private static int GetDivisorCount(long number)
        {
            int count = 0;
            for (long i = 1; i <= Math.Sqrt(number); i++)
            {
                if (number % i == 0)
                {
                    if (number / i == i)
                        count++;
                    else
                        count += 2;
                }
            }
            return count;
        }

    }
}